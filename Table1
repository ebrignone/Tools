Table1 <- function(DF,x,split,format,perBy){
  require(data.table)
  require(reshape2)
  require(plyr)
  require(dplyr)
  GetIt <- function(DF,x,split,tab,perBy){
    OUTPUT <- data.frame()
    DT <- data.table(DF)
    index <- DT[,x]
    DT$names <- names(DT)[index]
    DT$x <- DT[,x, with=FALSE]
    DT$split <- DT[,as.factor(split),with=FALSE]  
    if(sapply(DT,class)[index]=="factor"){
      if (perBy == "var"){
        DT[,.N,by=list(x,split)][,perc := 100*round(N/sum(N),4),by=.(x)][,entry :=paste(N,"(",perc,"%)",sep="")]     
      } else if (perBy == "split") {
        DT[,.N,by=list(x,split)][,perc := 100*round(N/sum(N),4),by=.(split)][,entry :=paste(N,"(",perc,"%)",sep="")]
      } else
        stop("D'Oh! perBy argument is invalid. Options are 'var' and 'split'.")
    } else if (sapply(DT,class)[index]=="numeric") {
      DT[,.(x=" ", Mean=round(mean(x, na.rm=TRUE),2), SD = round(sd(x, na.rm=TRUE),2)), by=split][,entry :=paste(Mean,"(",SD,")",sep="")]
    } else {
      stop("D'Oh! List contains unsupported data type. Factor and numeric are supported")
    }
  }
  DT <- data.table(DF)
  index <- DT[,x]
  DT$split <- DT[,as.factor(split),with=FALSE]  
  if (format=="raw"){
    return(lapply(x,FUN=GetIt, DF=DF, split=split,perBy=perBy))
  } else if (format=="table"){
    head <- cbind(names(DT)[index],
    data.frame(matrix(rep((" "),(length(levels(DT[,split]))*length(names(DT)[index]))), ncol=length(levels(DT[,split])))))  
    head[,1] <- factor(head[,1], levels=unique(head[,1]))
    headlist <- split(head, head[,1])
    data <- lapply(lapply(x,FUN=GetIt, DF=DF, split=split, perBy=perBy), x ~ split, value.var="entry", FUN=dcast)
    out <- list()                                                                                                                                                    
    for (i in 1:length(headlist)) {
      data[[i]]$x <- as.character(data[[i]]$x)
      names(headlist[[i]]) <- names(data[[i]]) 
      out[[i]] <- rbind(headlist[[i]], data[[i]])                                                                                                                                             
    }
    OUTPUT <- ldply(out,data.frame)
    colnames(OUTPUT) <- c(" ", levels(DT[,split]))
    return(OUTPUT)
  } else {
    stop("D'Oh! Format argument is invalid. Options are 'raw' and 'table'.")
  }
}
